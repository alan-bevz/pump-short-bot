import fs from 'fs/promises';
import readline from 'readline';
import { google } from 'googleapis';

const TOKEN_PATH = 'oauth-token.json';
const CREDENTIALS_PATH = 'oauth-client-secret.json';

export async function checkGoogleDriveAuthorization() {
  let credentials;

  try {
    credentials = JSON.parse(await fs.readFile(CREDENTIALS_PATH, 'utf-8'));
  } catch {
    console.warn('‚ùå –§–∞–π–ª oauth-client-secret.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.');
    return null;
  }

  const { client_secret, client_id, redirect_uris } = credentials.installed;
  const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]);

  try {
    const token = JSON.parse(await fs.readFile(TOKEN_PATH, 'utf-8'));
    oAuth2Client.setCredentials(token);
    console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π —É Google Drive.');
    return oAuth2Client;
  } catch {
    const authUrl = oAuth2Client.generateAuthUrl({
      access_type: 'offline',
      scope: ['https://www.googleapis.com/auth/drive.file'],
    });

    console.log('\nüîê –©–æ–± –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ñ–∞–π–ª–∏ –Ω–∞ Google Drive, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å:');
    console.log(authUrl);
    console.log('(–ê–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ Enter, —â–æ–± –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏)');

    const rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout,
    });

    const code = await new Promise(resolve => rl.question('\n–í—Å—Ç–∞–≤ –∫–æ–¥ —Å—é–¥–∏ (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ Enter): ', resolve));
    rl.close();

    if (!code.trim()) {
      console.warn('‚ö†Ô∏è –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –ø—Ä–æ–ø—É—â–µ–Ω–æ. –§–∞–π–ª–∏ –Ω–µ –±—É–¥—É—Ç—å –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –Ω–∞ Google Drive.');
      return null;
    }

    const { tokens } = await oAuth2Client.getToken(code);
    oAuth2Client.setCredentials(tokens);
    await fs.writeFile(TOKEN_PATH, JSON.stringify(tokens));
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞. –¢–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ.');
    return oAuth2Client;
  }
}
